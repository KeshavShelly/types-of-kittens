{"version":3,"sources":["logo.svg","components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","kitten","id","name","email","CardList","kittens","map","SearchBox","type","placeholder","onChange","onSearchChange","App","event","setState","searchField","target","value","state","fetch","then","response","json","users","this","filteredKittens","filter","toLowerCase","includes","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6RAAe,I,wBCGFA,EAAO,SAACC,GAAD,OAChB,sBAAKC,UAAY,iBAAjB,UACI,qBAAKC,IAAI,SAASC,IAAG,+BAA0BH,EAAMI,OAAOC,GAAvC,eACrB,mCAAML,EAAMI,OAAOE,KAAnB,OACA,4BAAIN,EAAMI,OAAOG,YCHZC,EAAW,SAACR,GAErB,OACI,qBAAKC,UAAU,YAAf,SACKD,EAAMS,QAAQC,KAAI,SAAAN,GAAM,OACrB,cAAC,EAAD,CAAsBA,OAAQA,GAAnBA,EAAOC,UCNrBM,G,MAAY,SAAAX,GAAK,OAC5B,uBACEC,UAAU,aACVW,KAAK,SACLC,YAAY,iBACZC,SAAUd,EAAMe,mBCkCLC,E,kDAnCb,aAAe,IAAD,8BACZ,gBAcFD,eAAiB,SAAAE,GACf,EAAKC,SAAS,CAAEC,YAAaF,EAAMG,OAAOC,SAb1C,EAAKC,MAAQ,CACXb,QAAS,GACTU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBI,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKT,SAAS,CAAET,QAASkB,S,oBAO5C,WAAU,IAAD,EAC0BC,KAAKN,MAA9Bb,EADD,EACCA,QAASU,EADV,EACUA,YACXU,EAAkBpB,EAAQqB,QAAO,SAAA1B,GAAM,OAC3CA,EAAOE,KAAKyB,cAAcC,SAASb,EAAYY,kBAEjD,OACE,sBAAK9B,UAAU,MAAf,UACE,+CACD,cAAC,EAAD,CAAWc,eAAgBa,KAAKb,iBAC/B,cAAC,EAAD,CAAUN,QAASoB,W,GA7BTI,aCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBZ,MAAK,YAAkD,IAA/Ca,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.1ed1d91f.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from  'react'\r\nimport './card.styles.css'\r\n\r\nexport const Card = (props) => (\r\n    <div className = 'card-container'>\r\n        <img alt='kitten' src={`https://robohash.org/${props.kitten.id}?set=set4`} />\r\n        <h2> {props.kitten.name} </h2>\r\n        <p>{props.kitten.email}</p>\r\n    </div>\r\n)","import React from 'react'\r\nimport './card-list.styles.css'\r\nimport { Card } from '../card/card.component'\r\n\r\nexport const CardList = (props) => {\r\n\r\n    return (\r\n        <div className='card-list'>\r\n            {props.kittens.map(kitten => (\r\n                <Card key={kitten.id} kitten={kitten} />\r\n            ))\r\n            }\r\n        </div>\r\n    )\r\n\r\n}","import React from 'react';\r\nimport './search-box.styles.css'\r\n\r\nexport const SearchBox = props => (\r\n  <input\r\n    className='search-box'\r\n    type='search'\r\n    placeholder='search kittens'\r\n    onChange={props.onSearchChange}\r\n  />\r\n);","import logo from './logo.svg';\nimport './App.css';\nimport React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component'\nimport { SearchBox } from './components/search-box/search-box.component'\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      kittens: [],\n      searchField: ''\n    }\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ kittens: users }));\n  }\n\n  onSearchChange = event => {\n    this.setState({ searchField: event.target.value });\n  };\n\n  render() {\n    const { kittens, searchField } = this.state;\n    const filteredKittens = kittens.filter(kitten =>\n      kitten.name.toLowerCase().includes(searchField.toLowerCase())\n    );\n    return (\n      <div className=\"App\">\n        <h1>Cutie kittens</h1>\n       <SearchBox onSearchChange={this.onSearchChange} />\n        <CardList kittens={filteredKittens}></CardList>\n      </div>\n    );\n  }\n\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}